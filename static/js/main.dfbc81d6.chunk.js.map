{"version":3,"sources":["components/PhonebookForm/PhonebookForm.module.css","utils/transitions/pop.module.css","components/ContactList/PhonebookList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Contaiter.js","redux/contacts/contacts-selectors.js","components/PhonebookForm/PhonebookForm.js","components/ContactList/PhonebookList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterContact","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","s","container","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","PhonebookForm","dispatch","useDispatch","useSelector","useState","setName","setNumber","handleChange","e","currentTarget","value","reset","form","onSubmit","preventDefault","find","contact","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","test","checkValidNumber","toast","error","info","label","input","type","onChange","placeholder","options","delimiter","blocks","btn","PhonebookList","visibleContacts","CSSTransition","in","length","timeout","classNames","popTransition","mountOnEnter","unmountOnExit","TransitionGroup","component","list","map","listItem","color","size","onClick","Filter","target","App","autoClose","theme","toastStyle","backgroundColor","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.dfbc81d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhonebookForm_form__3NzHo\",\"label\":\"PhonebookForm_label__25K2S\",\"input\":\"PhonebookForm_input__1kPxv\",\"btn\":\"PhonebookForm_btn__EuzA3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__20yKV\",\"enterActive\":\"pop_enterActive__1jahi\",\"exit\":\"pop_exit__D6VMH\",\"exitActive\":\"pop_exitActive__1yvK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PhonebookList_list__1AyJh\",\"listItem\":\"PhonebookList_listItem__1LcHy\",\"info\":\"PhonebookList_info__GIVom\",\"btn\":\"PhonebookList_btn__3NRrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1wqkC\",\"input\":\"Filter_input__5WLka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__4IzAS\"};","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\nimport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from './contacts-types';\n\nexport const addContact = createAction(ADD_CONTACT, (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\nexport const deleteContact = createAction(DELETE_CONTACT);\nexport const filterContact = createAction(FILTER_CONTACT);\n","export const ADD_CONTACT = 'contacts/add';\nexport const DELETE_CONTACT = 'contacts/delete';\nexport const FILTER_CONTACT = 'contacts/filter';\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, filterContact } from './contacts-actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n\n// import { createStore } from 'redux';\n\n// const reducer = (state = {}, action) => state;\n\n// const store = createStore(reducer);\n\n// export default store;\n","import s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useState } from 'react';\nimport s from './PhonebookForm.module.css';\nimport Cleave from 'cleave.js/react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-actions';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport { toast } from 'react-toastify';\n\nexport default function PhonebookForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkRepeatNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const checkValidNumber = number => {\n    return !/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (checkRepeatName(name)) {\n      toast(`🤔 ${name} is already in the phonebook.`);\n    } else if (checkRepeatNumber(number)) {\n      toast(`🤔 ${number} is already in the phonebook.`);\n    } else if (checkEmptyQuery(name, number)) {\n      toast.info(\"😱 Enter the contact's name and number phone!\");\n    } else if (checkValidNumber(number)) {\n      toast.error('💩 Enter the correct number phone!');\n    } else {\n      dispatch(addContact(name, number));\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Ivan Ivanov\"\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <Cleave\n          options={{ delimiter: '-', blocks: [3, 2, 2] }}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n          placeholder=\"111-11-11\"\n        />\n      </label>\n\n      <button type=\"submit\" className={s.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\nimport {\n  getVisibleContacts,\n  getContacts,\n} from '../../redux/contacts/contacts-selectors';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport s from './PhonebookList.module.css';\nimport popTransition from '../../utils/transitions/pop.module.css';\nimport { BsXSquareFill } from 'react-icons/bs';\n\nexport default function PhonebookList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(getVisibleContacts);\n  const contacts = useSelector(getContacts);\n\n  return (\n    <>\n      <CSSTransition\n        in={!contacts.length}\n        timeout={250}\n        classNames={popTransition}\n        mountOnEnter\n        unmountOnExit\n      >\n        <p>Your phonebook is empty. Please add contact.</p>\n      </CSSTransition>\n      <TransitionGroup component=\"ul\" className={s.list}>\n        {visibleContacts.map(({ id, name, number }) => (\n          <CSSTransition\n            key={id}\n            timeout={250}\n            mountOnEnter\n            unmountOnExit\n            classNames={popTransition}\n          >\n            <li className={s.listItem}>\n              <p className={s.info}>\n                <b>{name}</b>\n                <em>{number}</em>\n              </p>\n              <BsXSquareFill\n                color=\"red\"\n                size=\"20px\"\n                className={s.btn}\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n              ></BsXSquareFill>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/contacts-actions';\nimport {\n  getFilter,\n  getContacts,\n} from '../../redux/contacts/contacts-selectors';\nimport { CSSTransition } from 'react-transition-group';\nimport popTransition from '../../utils/transitions/pop.module.css';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  return (\n    <CSSTransition\n      in={contacts.length > 0}\n      timeout={250}\n      classNames={popTransition}\n      mountOnEnter\n      unmountOnExit\n    >\n      <div className={s.filter}>\n        Find contacts by name{' '}\n        <input\n          className={s.input}\n          type=\"text\"\n          value={filter}\n          onChange={e => dispatch(filterContact(e.target.value))}\n          placeholder=\"Enter name\"\n        />\n      </div>\n    </CSSTransition>\n  );\n}\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './components/Container';\nimport PhonebookForm from './components/PhonebookForm';\nimport PhonebookList from './components/ContactList';\nimport Filter from './components/Filter';\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <PhonebookForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n\n      <PhonebookList />\n\n      <ToastContainer\n        autoClose={3000}\n        theme=\"colored\"\n        toastStyle={{ backgroundColor: 'red' }}\n      />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}